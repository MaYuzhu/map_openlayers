var height = document.documentElement.clientHeight;// 获取可见域高度
var width = document.documentElement.clientWidth// 获取可见域宽度
var shift_x;
var shift_y;
var floor = {};
floor.name = [];
floor.Z = [];
floor.textZ = [];
//楼位移最大值
var fv = 0;

//台震的全绿
floorValueColor = {
		red:1000,
		yellow:999,
		green:0,
};

var dataGconfig = {};
	dataGconfig.info = 5;
	dataGconfig.chn = null;
	dataGconfig.r = false;
	dataGconfig.direction = "y";
	dataGconfig.n = 0;
//var url ="http://36.110.66.202/";
//var url ="http://192.168.20.23:8181/";
var url = pFun.config.url;
$(function() {
	//傅里叶图表去掉
	//fftEcharts();

//	$("#dev_data").height(height - 190);
//	login();
//	dataG("5");
	dataG("30");//之前是上面的，5是1秒一刷，一刷多个接口，30是6秒一刷
	
//	摇晃楼
	//getDisplacementCorrection();
	
	
});
function changeType() {
	var type = "";
	var obj = document.getElementsByName("xyz");
	for (var i = 0; i < obj.length; i++) {
		if (obj[i].checked) {
			type = obj[i].value;
			dataGconfig.direction = type;
		}
	}
}
function login(){
	$.ajax({
        type: "get",
        cache: true,
        url: url + "zzcismp/user/login.shtml?username=admin&password=123456",
        contentType: "application/javascript;charset=UTF-8",
        xhrFields: {
            withCredentials: true
        },
        crossDomain: true,
        dataType: "jsonp",
        jsonp: "callback",
        success: function(json){
        },
        error: function(){
            // alert('fail');
        }
    });
}


var myChart01 = echarts.init(document.getElementById("picture_content"));

//压力测试
function dataG(info){
	if(dataGconfig.r)
		return;
	dataGconfig.r = true;
	
	dataGconfig.info = info;
	clearInterval(dataGconfig.time);

	if(info == 5){
		$("#fiveS").css("background-color", "#009ee6");
		$("#tenS").css("background-color", "#FFFFFF");
		$("#thirtyS").css("background-color", "#FFFFFF");
	}else if(info == 10){
		$("#fiveS").css("background-color", "#FFFFFF");
		$("#tenS").css("background-color", "#009ee6");
		$("#thirtyS").css("background-color", "#FFFFFF");
	}else if(info == 30){
		$("#fiveS").css("background-color", "#FFFFFF");
		$("#tenS").css("background-color", "#FFFFFF");
		$("#thirtyS").css("background-color", "#009ee6");
	}
	
	
	var buildcode = "1101B0002";
	var start = StartDate(info);
	var end = NowDate();
//	start = "2017-08-21 14:00:00";
//	end = "2017-08-21 14:00:04";
	$.ajax({
         type: "get",
         cache: true,
//         url: url + "zzcismp/earthquakeData/getEarthquakeDataExtraction.shtml",
//         data:{buildcode:buildcode,starttime:start,endtime:end,timetype:"second",flag:info,direction:dataGconfig.direction},
         url: url + "zzcismp/earthquakeData/getEarthquakeDataXyz.shtml",//区分xyz
         data:{buildcode:buildcode,endtime:end,timetype:"second",flag:(info/5),direction:dataGconfig.direction},
         contentType: "application/javascript;charset=UTF-8",
         xhrFields: {
             withCredentials: true
         },
         crossDomain: true,
         dataType: "jsonp",
         jsonp: "callback",
         success: function(json){
        	 //console.log(json);
        	 if(json != null){
        		 a3d.data = json;
        		 var devdata = json[buildcode];
        		 var data = {};
        		 var h = 600;
        		 option = {
        				    title: [
//        				    	{
//            				        text: '雨量流量关系图',
//            				        x: 'left',
//            				        textStyle:{
//            				        	fontStyle:"14px"
//            				        }
//            				    }
        				    ],
        				    tooltip: {
        				        trigger: 'axis',
        				        axisPointer: {
        				            animation: false
        				        }
        				    },
        				    legend: {
        				        data:[/*'流量','降雨量'*/],
        				        x: 'left',
        				        show: false
        				    },


        				    grid: [
//        				    	{
//	        				        left: 50,
//	        				        right: 50,
//	        				        height: '35%'
//	        				    }, {
//	        				        left: 50,
//	        				        right: 50,
//	        				        top: '55%',
//	        				        height: '35%'
//	        				    }
        				    ],
        				    xAxis : [
//        				        {
//        				            type : 'category',
//        				            data: timeData
//        				        },
//        				        {
//        				            gridIndex: 1,
//        				            type : 'category',
//        				            data: timeData
//        				        }
        				    ],
        				    yAxis : [
//        				        {
//        				            name : '流量(m^3/s)',
//        				            type : 'value',
//        				            max : 500
//        				        },
//        				        {
//        				            gridIndex: 1,
//        				            name : '降雨量(mm)',
//        				            type : 'value'
//        				        }
        				    ],
        				    series : [
//        				        {
//        				            name:'流量',
//        				            type:'line',
//        				            symbolSize: 8,
//        				            hoverAnimation: false,
//        				            data:[
//        				                0.97,0.96,0.96,0.95,0.95,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.93,0.92,0.91,0.9,0.89,0.88,0.87,0.87,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.87,0.88,0.9,0.93,0.96,0.99,1.03,1.06,1.1,1.14,1.17,1.2,1.23,1.26,1.29,1.33,1.36,1.4,1.43,1.45,1.48,1.49,1.51,1.51,1.5,1.49,1.47,1.44,1.41,1.37,1.34,1.3,1.27,1.24,1.22,1.2,1.19,1.18,1.16,1.15,1.14,1.13,1.12,1.11,1.11,1.1,1.1,1.1,1.1,1.1,1.1,1.1,1.1,1.1,1.1,1.1,1.1,1.1,1.1,1.1,1.1,1.1,1.09,1.09,1.08,1.07,1.06,1.05,1.04,1.03,1.03,1.02,1.01,1.01,1,0.99,0.98,0.97,0.96,0.96,0.95,0.95,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.93,0.92,0.91,0.9,0.89,0.88,0.87,0.87,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.85,0.84,0.83,0.82,0.81,0.8,0.8,0.79,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.77,0.75,0.73,0.71,0.68,0.65,0.63,0.61,0.59,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.57,0.57,0.57,0.56,0.55,0.55,0.54,0.54,0.53,0.52,0.52,0.51,0.51,0.5,0.5,0.49,0.48,0.48,0.47,0.47,0.47,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.46,0.52,0.67,0.9,1.19,1.52,1.87,2.22,2.55,2.84,3.07,3.22,3.28,3.28,3.28,3.28,3.28,3.28,3.28,3.28,3.28,3.28,3.28,3.28,3.28,3.24,3.13,2.97,2.77,2.54,2.3,2.05,1.82,1.62,1.46,1.35,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.31,1.3,1.26,1.21,1.14,1.06,0.97,0.89,0.81,0.74,0.69,0.65,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.63,0.63,0.62,0.62,0.61,0.6,0.59,0.59,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.59,0.61,0.63,0.65,0.68,0.71,0.73,0.75,0.77,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.77,0.75,0.73,0.71,0.68,0.65,0.63,0.61,0.59,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.59,0.59,0.6,0.61,0.62,0.62,0.63,0.63,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.65,0.66,0.68,0.69,0.71,0.73,0.74,0.76,0.77,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.79,0.81,0.82,0.84,0.86,0.88,0.9,0.92,0.93,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.94,0.93,0.92,0.91,0.9,0.89,0.88,0.87,0.87,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.86,0.85,0.84,0.82,0.8,0.78,0.76,0.75,0.73,0.72,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.72,0.73,0.74,0.76,0.78,0.79,0.82,0.84,0.86,0.89,0.91,0.94,0.97,1,1.02,1.05,1.08,1.11,1.14,1.17,1.19,1.22,1.25,1.27,1.29,1.31,1.33,1.35,1.36,1.38,1.39,1.39,1.4,1.4,1.4,1.39,1.37,1.35,1.32,1.29,1.26,1.22,1.18,1.14,1.1,1.05,1.01,0.97,0.93,0.89,0.85,0.82,0.78,0.76,0.74,0.72,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.72,0.73,0.74,0.75,0.77,0.78,0.8,0.82,0.84,0.87,0.89,0.92,0.94,0.97,0.99,1.02,1.05,1.08,1.1,1.13,1.16,1.18,1.21,1.23,1.26,1.28,1.3,1.32,1.34,1.35,1.37,1.38,1.39,1.4,1.41,1.41,1.42,1.42,1.43,1.43,1.43,1.44,1.44,1.44,1.44,1.45,1.45,1.45,1.46,1.46,1.46,1.47,1.47,1.48,1.48,1.49,1.5,1.51,1.54,1.62,1.73,1.88,2.05,2.24,2.45,2.67,2.89,3.11,3.31,3.51,3.69,3.86,4.03,4.18,4.33,4.48,4.62,4.76,4.89,5.02,5.16,5.29,5.43,5.57,5.71,5.86,6.02,6.18,6.36,6.54,6.73,6.93,7.15,7.38,7.62,7.88,8.16,8.46,8.77,9.11,9.46,9.84,10.24,10.67,11.12,11.6,12.3,13.66,16,38.43,82.21,146.6,218.7,226,225.23,223.08,219.78,212,199.82,184.6,168,151.65,137.21,126.31,119.94,115.52,112.06,108.92,105.44,101,94.56,86.36,77.67,69.76,63.9,60.38,57.41,54.84,52.57,50.56,48.71,46.97,45.25,43.48,41.6,39.5,37.19,34.81,32.46,30.27,28.36,26.85,25.86,25.5,25.5,25.5,25.5,25.5,25.5,25.5,25.5,25.5,25.5,25.5,25.5,25.5,25.27,24.65,23.7,22.52,21.17,19.75,18.33,16.98,15.8,14.85,14.23,14,14.02,14.08,14.17,14.29,14.44,14.61,14.8,15.01,15.23,15.47,15.71,15.95,16.19,16.43,16.67,16.89,17.1,17.29,17.46,17.61,17.73,17.82,17.88,17.9,17.63,16.88,15.75,14.33,12.71,10.98,9.23,7.56,6.05,4.81,3.92,3.47,3.28,3.1,2.93,2.76,2.61,2.46,2.32,2.19,2.07,1.96,1.85,1.75,1.66,1.58,1.51,1.44,1.39,1.34,1.29,1.26,1.23,1.22,1.2,1.2,1.2,1.2,1.2,1.2,1.21,1.21,1.21,1.21,1.22,1.22,1.22,1.23,1.23,1.23,1.24,1.24,1.25,1.25,1.25,1.26,1.26,1.27,1.27,1.27,1.28,1.28,1.28,1.29,1.29,1.29,1.29,1.3,1.3,1.3,1.3,1.3,1.3,1.3,1.3,1.3,1.3,1.3,1.29,1.29,1.29,1.29,1.28,1.28,1.28,1.27,1.27,1.26,1.25,1.25,1.24,1.23,1.23,1.22,1.21,1.2,1.16,1.06,0.95,0.83,0.74,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.71,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.7,0.69,0.69,0.69,0.69,0.69,0.69,0.69,0.69,0.68,0.68,0.68,0.68,0.68,0.68,0.67,0.67,0.67,0.67,0.67,0.67,0.67,0.66,0.66,0.66,0.66,0.66,0.66,0.66,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.65,0.66,0.68,0.69,0.71,0.73,0.74,0.76,0.77,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.78,0.8,0.86,0.95,1.08,1.25,1.46,1.7,1.97,2.28,2.63,3.01,3.42,3.87,4.35,4.86,5.4,5.98,6.59,7.92,10.49,14.04,18.31,23.04,27.98,32.87,37.45,41.46,44.64,46.74,47.5,46.86,45.16,42.77,40.04,37.33,35,32.74,30.21,27.7,25.5,23.9,23.2,23.06,22.94,22.84,22.77,22.72,22.7,22.8,23.23,23.95,24.91,26.04,27.3,28.76,30.7,33.39,37.12,42.15,48.77,65.22,252.1,257,237.32,221.19,212,208.67,206.89,205.2,202.15,189.82,172,165.3,160.49,156.8,153.44,149.62,144.6,138.27,131,123.11,114.9,106.69,98.79,91.5,85.13,80,75.53,71.03,66.65,62.54,58.85,55.73,53.31,51.75,51.2,56.53,68.25,80,91.01,102.03,109,112.37,115.29,117.68,119.48,120.61,121,119.45,115.57,110.52,105.47,101.58,100,99.97,99.94,99.92,99.9,99.88,99.86,99.85,99.84,99.83,99.82,99.81,99.81,99.8,99.8,99.8,122.15,163.65,186,182.96,175.15,164.56,153.18,143,136,131.37,126.98,122.81,118.85,115.09,111.52,108.13,104.9,101.83,98.9,96.11,93.44,90.87,88.41,86.04,83.74,81.51,79.33,77.2,75.1,73.02,70.95,68.88,66.8,64.87,63.14,61.4,59.53,57.67,56,54.6,53.36,52.2,51.05,49.85,48.5,46.87,44.92,42.74,40.42,38.04,35.69,33.46,31.44,29.72,28.38,27.51,27.2,27.2,27.2,27.2,27.2,27.2,27.2,27.2,27.2,27.2,27.2,27.2,27.2,27.14,26.97,26.7,26.35,25.95,25.49,25.02,24.53,24.04,23.58,23.16,22.8,22.46,22.11,21.75,21.39,21.03,20.69,20.36,20.05,19.78,19.54,19.35,19.2,19.09,19,18.92,18.85,18.79,18.74,18.68,18.62,18.56,18.49,18.4,18.3,18.17,18.02,17.83,17.63,17.41,17.18,16.93,16.68,16.43,16.18,15.93,15.7,15.47,15.22,14.97,14.71,14.45,14.18,13.93,13.68,13.44,13.21,13,12.8,12.62,12.46,12.31,12.16,12.03,11.89,11.76,11.62,11.48,11.33,11.17,11,10.81,10.59,10.36,10.12,9.86,9.61,9.36,9.12,8.89,8.68,8.5,8.35,8.21,8.08,7.94,7.81,7.68,7.56,7.46,7.36,7.29,7.23,7.19,7.18,7.51,8.42,9.81,11.58,13.63,15.86,18.16,20.44,22.58,24.49,26.06,27.2,28.08,28.95,29.81,30.65,31.48,32.28,33.07,33.82,34.55,35.25,35.92,36.56,37.15,37.71,38.23,38.7,39.13,39.5,39.83,40.1,40.31,40.47,40.57,40.6,40.49,40.16,39.64,38.94,38.09,37.1,36,34.79,33.51,32.17,30.79,29.39,27.99,26.6,25.25,23.96,22.75,21.63,20.63,19.76,19.04,18.49,18.14,18,17.97,17.95,17.94,17.92,17.91,17.9,17.89,17.88,17.87,17.85,17.83,17.8,17.7,17.46,17.13,16.7,16.21,15.68,15.13,14.57,14.04,13.56,13.14,12.8,12.52,12.27,12.02,11.79,11.57,11.37,11.16,10.97,10.78,10.59,10.39,10.2,10.01,9.81,9.63,9.44,9.26,9.08,8.9,8.73,8.56,8.39,8.22,8.06,7.9,7.73,7.57,7.41,7.25,7.09,6.94,6.79,6.65,6.52,6.4,6.28,6.17,6.08,5.98,5.9,5.81,5.73,5.65,5.57,5.49,5.41,5.32,5.23,5.14,5.04,4.94,4.84,4.74,4.63,4.53,4.43,4.33,4.23,4.13,4.03,3.93,3.81,3.69,3.57,3.45,3.33,3.22,3.12,3.04,2.98,2.93,2.92,2.92,2.92,2.92,2.92,2.92,2.92,2.92,2.92,2.92,2.92,2.92,2.92,2.9,2.86,2.8,2.71,2.62,2.52,2.42,2.33,2.24,2.18,2.14,2.12,2.12,2.12,2.12,2.12,2.12,2.12,2.12,2.12,2.12,2.12,2.12,2.12,2.1,2.06,2,1.91,1.82,1.71,1.61,1.5,1.4,1.32,1.25,1.2,1.16,1.13,1.1,1.06,1.03,1,0.97,0.93,0.9,0.87,0.85,0.82,0.79,0.77,0.74,0.72,0.69,0.67,0.65,0.63,0.61,0.59,0.58,0.56,0.54,0.53,0.52,0.51,0.5,0.49,0.48,0.48,0.47,0.47,0.46,0.46,0.47,0.48,0.5,0.53,0.56,0.59,0.62,0.64,0.67,0.69,0.7,0.71,0.71,0.71,0.71,0.7,0.7,0.7,0.69,0.69,0.69,0.68,0.68,0.67,0.67,0.67,0.66,0.66,0.65,0.65,0.65,0.65,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.64,0.65,0.65,0.65,0.66,0.66,0.67,0.68,0.69,0.69,0.7,0.71,0.73,0.74,0.75,0.76,0.78,0.8,0.81,0.83,0.85,0.87,0.89,0.92,0.94,0.97,0.99,1.02,1.05,1.08,1.11,1.15,1.18,1.32,1.66,2.21,2.97,3.94,5.11,6.5,8.1,9.9,11.92,14.15,16.6,22.3,22.8,24.48,30.38,35.74,42.4,57.14,94.04,112.9,123.4,130.4,130,119.4,120.7,116.8,118.1,119.4,124.8,143.5,204,294,319.2,328.4,365,350.8,347.6,347.6,325,331.6,319.2,308,308,308,308,296.8,300,281,278.4,270.6,271,253.6,233.5,219.2,207.8,205.9,204,189.6,178.8,173.4,160,154.4,146,145,140.5,130.4,126.2,116.8,112.9,106.5,101.6,98.51,82.67,67.3,80.05,76.12,72.3,71.02,69.78,67.3,67.3,68.54,57.6,71.02,66.06,59.12,57.14,55.16,55.16,52.19,52.19,51.2,48.56,44.16,43,45.92,49.44,44.16,36.48,35.74,35,32.36,37.22,32.36,32.36,32.36,33.68,32.36,31.7,35.74,29.72,32.36,30.38,29.72,28.4,28.4,28.4,27.28,25.6,25.04,23.92,22.3,21.8,21.8,21.8,22.8,21.8,25.6,22.8,22.8,17.8,16.04,16.04,16.04,16.04,16.04,16.04,16.04,16.04,16.04,16.04,15.02,14,14.03,14.11,14.25,14.45,14.72,15.06,15.46,15.95,16.51,17.15,17.87,18.69,19.59,20.59,21.69,22.88,24.18,25.59,27.1,28.73,30.48,32.34,34.33,36.44,38.69,41.06,43.57,46.22,49.01,51.95,55.04,58.27,61.66,65.21,68.92,72.8,88.09,104.9,105.7,110.3,111.6,110.3,106.5,105.7,103.3,100,97.02,98.8,91.07,83.98,88.09,81.36,78.74,77.43,77.43,73.5,74.81,72.63,68.58,66.4,68.54,69.78,67.3,64.82,61.1,59.12,56.15,53.18,50.32,49.44,44.16,36.5,42.4,37.96,37.22,33.68,36.48,35.74,35,35,37.22,37.22,39.44,32.6,34.54,36.48,35.74,34.34,33.68,33.02,31.04,29.72,29.72,29.72,26.16,25.6,29.72,18.3,22.3,21.3,21.8,21.8,20.3,20.8,25.04,25.04,25.6,25.6,25.04,25.6,25.04,25.6,23.92,25.04,21.3,21.8,22.3,21.8,20.8,16.1,20.3,18.3,13.22,19.3,19.3,18.3,14.4,13.86,13.36,12.9,12.48,12.1,11.75,11.43,11.15,10.9,10.67,10.48,10.31,10.16,10.04,9.93,9.85,9.78,9.73,9.69,9.67,9.65,9.65,12.08,8.67,11.7,11.38,10.65,9.84,9.32,9.07,8.85,8.66,8.49,8.35,8.22,8.1,7.98,7.86,7.74,7.61,7.47,7.31,7.14,6.96,6.78,6.58,6.39,6.19,5.99,5.78,5.58,5.39,5.2,5.01,4.83,4.67,4.51,4.37,4.24,4.12,4.02,3.95,3.89,3.85,3.84,4.41,5.77,7.39,8.75,9.32,9.18,9,8.94,8.88,8.83,8.78,8.73,8.68,8.64,8.6,8.56,8.53,8.5,8.47,8.45,8.42,8.4,8.39,8.37,8.36,8.35,8.35,8.34,8.34,8.67,9.65,9.62,9.53,9.4,9.21,8.98,8.7,8.4,8.06,7.69,7.3,6.89,6.47,6.03,5.59,5.14,4.7,4.26,3.83,3.42,3.02,2.65,2.3,1.98,1.7,1.45,1.25,1.09,0.99,0.94,0.92,0.91,0.89,0.87,0.85,0.84,0.82,0.81,0.79,0.78,0.77,0.75,0.74,0.73,0.72,0.71,0.7,0.69,0.68,0.67,0.66,0.65,0.64,0.64,0.63,0.63,0.62,0.62,0.61,0.61,0.61,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.61,0.61,0.61,0.61,0.61,0.61,0.62,0.62,0.62,0.62,0.63,0.63,0.63,0.63,0.63,0.64,0.64,0.64,0.64,0.64,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.64,0.63,0.62,0.6,0.59,0.57,0.55,0.54,0.53,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.51,0.51,0.51,0.5,0.5,0.49,0.48,0.47,0.47,0.46,0.45,0.45,0.44,0.43,0.42,0.42,0.41,0.41,0.41,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.41,0.42,0.43,0.44,0.46,0.48,0.5,0.53,0.55,0.58,0.61,0.64,0.67,0.7,0.73,0.77,0.8,0.83,0.87,0.9,0.93,0.96,0.99,1.02,1.05,1.08,1.1,1.12,1.14,1.16,1.17,1.18,1.19,1.2,1.2,1.2,1.19,1.17,1.15,1.12,1.09,1.06,1.02,0.98,0.94,0.9,0.86,0.82,0.78,0.74,0.7,0.66,0.63,0.6,0.57,0.55,0.53,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.51,0.51,0.5,0.5,0.49,0.49,0.48,0.47,0.47,0.47,0.46,0.46,0.45,0.45,0.45,0.44,0.44,0.44,0.43,0.43,0.43,0.42,0.42,0.42,0.41,0.41,0.41,0.41,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.4,0.41,0.41,0.41,0.41,0.41,0.41,0.41,0.41,0.41,0.41,0.41,0.41,0.41,0.41,0.41,0.42,0.42,0.42,0.42,0.42,0.42,0.42,0.42,0.42,0.43,0.43,0.43,0.43,0.43,0.43,0.44,0.44,0.44,0.44,0.44,0.44,0.45,0.45,0.45
//        				            ]
//        				        },
//        				        {
//        				            name:'降雨量',
//        				            type:'line',
//        				            xAxisIndex: 1,
//        				            yAxisIndex: 1,
//        				            symbolSize: 8,
//        				            hoverAnimation: false,
//        				            data: [
//        				                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.005,0.017,0.017,0.017,0.017,0.011,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.021,0.026,0.03,0.036,0.036,0.195,0.221,0.019,0.013,0.017,0.03,0.03,0.03,0.046,0.045,0.038,0.084,0.045,0.045,0.037,0.034,0.035,0.036,0.044,0.052,0.048,0.109,0.033,0.029,0.04,0.042,0.042,0.042,0.073,0.076,0.062,0.066,0.066,0.075,0.096,0.128,0.121,0.128,0.14,0.226,0.143,0.097,0.018,0,0,0,0,0,0.018,0.047,0.054,0.054,0.054,0.036,0.185,0.009,0.038,0.061,0.077,0.091,0.126,0.69,0.182,0.349,0.231,0.146,0.128,0.167,0.1,0.075,0.071,0.071,0.117,0.01,0.002,0.002,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.005,0.026,0.038,0.038,0.038,0.076,0.086,0.109,0.213,0.276,0.288,0.297,0.642,1.799,1.236,2.138,0.921,0.497,0.685,0.828,0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.018,0.024,0.024,0.024,0.024,0.006,0.003,0.046,0.046,0.046,0.046,0.043,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.204,0.303,1.028,1.328,1.524,1.41,1.362,1.292,1.191,0.529,0.501,0.944,1.81,2.899,0.859,0.126,0.087,0.047,0,0,0,0,0.011,0.028,0.028,0.028,0.028,0.017,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.099,0.159,0.297,0.309,0.309,0.614,0.818,1.436,1.195,0.553,0.542,0.955,0.898,0.466,0.386,0.556,0.388,0.221,0.192,0.192,0.187,0.166,0.18,0.302,0.158,0.009,0.009,0.009,0.009,0.009,0.007,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.004,0.032,0.032,0.032,0.032,0.082,0.149,0.204,0.247,0.262,0.49,0.51,0.533,0.746,0.847,2.393,1.188,1.114,0.475,0.043,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.017,0.017,0.021,0.042,0.079,0.111,0.126,0.122,0.133,0.846,0.102,0.077,0.067,0.056,0.005,0,0,0,0,0,0,0,0,0,0,0,0,0,0.011,0.017,0.017,0.017,0.017,0.006,0,0,0,0,0,0.01,0.03,0.054,0.067,0.07,0.25,0.251,0.494,0.065,0.054,0.054,0.064,0.084,0.077,0.101,0.132,0.248,0.069,0.117,0.115,0.087,0.326,0.036,0.009,0.009,0.009,0.009,0.009,0.004,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02,0.039,0.04,0.04,0.04,0.229,0.079,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.023,0.069,0.082,0.082,0.082,0.503,0.774,0.038,0.012,0.012,0.012,0.016,0.02,0.028,0.051,0.06,0.064,0.19,0.15,0.164,0.139,0.13,0.085,0.031,0.023,0.022,0.007,0.005,0.005,0.001,0,0.02,0.048,0.048,0.053,0.056,0.036,0.008,0.008,0.004,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.013,0.017,0.036,0.068,0.095,0.233,0.272,0.377,0.722,1.494,3.756,0.954,0.439,0.442,0.462,0.373,0.249,0.214,0.1,0.044,0.037,0.023,0.002,0,0,0,0,0,0,0.02,0.024,0.024,0.024,0.024,0.004,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.008,0.017,0.017,0.045,0.186,0.308,0.241,0.241,0.893,4.067,4.494,5.015,3.494,2.057,1.411,0.718,0.407,0.313,0.339,1.537,1.105,0.218,0.136,0.03,0.005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.037,0.448,1.2,1.309,1.309,1.425,1.223,0.471,0.767,0.423,0.273,0.412,0.646,0.481,0.239,0.131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.044,0.15,0.223,0.388,0.513,0.883,2.828,4.786,5.959,4.95,6.434,6.319,3.35,2.806,4.204,1.395,1.015,1.015,0.836,0.74,0.72,0.615,0.477,0.192,0.046,0.007,0.007,0.007,0.007,0.007,0.007,0.007,0.008,0.005,0.005,0.005,0.005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.001,0.012,0.012,0.012,0.012,0.011,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.002,0.012,0.028,0.028,0.028,0.138,0.092,0.082,0.082,0.096,0.719,0.155,0.042,0.047,0.129,0.021,0.021,0.014,0.009,0.029,0.067,0.088,0.095,0.095,0.138,0.091,0.032,0.025,0.025,0.003,0,0,0,0,0,0,0,0,0,0,0,0,0.002,0.045,0.228,0.297,0.325,0.339,0.581,1.244,0.796,0.517,0.227,0.053,0.006,0,0,0,0,0,0,0,0,0,0.003,0.005,0.005,0.005,0.005,0.081,0.129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.014,0.041,0.041,0.041,0.041,0.027,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.009,0.017,0.017,0.017,0.017,0.355,0.174,0.009,0.009,0.012,0.136,0.208,0.208,0.208,0.215,7.359,1.858,0.458,0.053,0.053,0.047,0.045,0.045,0.059,0.136,0.188,0.206,0.21,0.588,1.517,6.02,4.688,4.42,0.624,0.326,0.359,0.553,0.899,0.94,2.95,9.415,5.752,1.092,0.096,0.035,0.026,0.018,0.015,0.011,0.011,0.011,0,0,0,0,0,0,0,0,0,0,0,0.056,0.27,0.314,0.351,0.354,0.609,0.796,1.857,0.848,0.538,0.214,0.178,0.178,0.201,0.231,0.227,0.272,0.397,0.45,1.014,2.917,1.675,0.081,0.059,0.059,0.148,0.075,0.075,0.078,0.236,0.784,0.784,0.784,0.784,0.741,0.115,0.058,0.058,0.058,0.029,0.015,0.015,0.015,0.015,0.012,0.008,0.604,0.985,1.305,2.273,2.528,2.336,2.496,2.281,1.397,1.713,3.259,1.167,0.745,0.548,1.058,0.684,0.728,0.392,0.179,0.283,0.283,0.46,0.08,0.099,0.099,0.099,0.1,0.143,0.137,0.238,0.317,0.262,0.225,0.792,0.426,0.332,0.261,0.11,0.093,0.102,0.171,0.292,0.504,0.605,1.745,2.485,1.964,0.33,0.171,0.259,0.242,0.215,0.366,0.354,0.205,0.203,0.262,0.153,0.13,0.137,0.362,0.691,0.295,0.433,0.154,0.056,0.053,0.053,0.053,0.051,0.047,0.065,0.078,0.091,0.206,0.813,0.102,0.151,0.05,0.024,0.004,0.001,0,0,0,0.021,0.021,0.021,0.021,0.021,0.013,0.013,0.013,0.013,0.013,0.013,0.013,0.013,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.008,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.018,0.021,0.021,0.021,0.021,0.003,0,0,0,0,0,0,0,0,0,0.024,0.173,0.261,0.267,0.267,0.534,1.354,1.772,0.72,0.218,0.018,0.018,0.028,0.036,0.032,0.194,0.082,0.035,0.286,0.027,0.038,0.038,0.027,0.021,0.014,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.016,0.017,0.017,0.031,0.047,0.043,0.056,0.104,0.149,0.179,0.205,0.328,0.998,0.522,1.851,3.727,3.273,2.204,1.169,1.006,1.179,0.74,0.741,1.065,0.925,0.671,0.497,0.431,0.327,0.277,0.126,0.581,0.207,0.359,2.485,0.038,0.036,0.003,0.003,0.003,0.003,0.004,0.098,0.023,0.021,0.021,0.022,0.041,0.041,0.043,0.045,0.043,0.014,0.014,0.014,0.014,0.014,0.014,0.014,0.031,0.046,0.063,0.119,0.107,0.092,0.085,0.065,0.06,0.054,0.042,0.039,0.046,0.044,0.028,0.028,0.02,0.013,0.013,0.013,0.013,0.016,0.032,0.031,0.031,0.031,0.028,0.011,0.011,0.011,0.011,0.011,0.023,0.024,0.024,0.024,0.019,0.015,0.015,0.015,0.015,0.015,0.015,0.013,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.001,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.011,0.017,0.024,0.026,0.061,0.172,0.206,0.213,0.267,0.511,0.668,0.157,0.017,0.017,0.017,0.046,0.054,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.001,0.017,0.017,0.017,0.017,0.016,0,0,0,0,0,0,0,0,0,0.01,0.017,0.017,0.017,0.017,0.012,0.017,0.017,0.017,0.017,0.012,0,0,0,0,0,0.003,0.031,0.066,0.093,0.112,0.122,0.202,0.068,0.041,0.022,0.011,0,0,0,0,0,0,0,0,0,0,0,0.002,0.005,0.012,0.021,0.021,0.019,0.033,0.03,0.026,0.026,0.034,0.095,0.024,0.024,0.024,0.023,0.019,0.018,0.018,0.018,0.011,0.03,0.045,0.044,0.044,0.044,0.022,0.009,0.024,0.033,0.033,0.033,0.024,0.009,0,0,0,0,0,0,0.003,0.017,0.017,0.017,0.017,0.014,0,0,0,0,0,0.032,0.032,0.032,0.032,0.032,0.005,0.008,0.009,0.014,0.014,0.009,0.005,0.004,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.007,0.009,0.009,0.009,0.009,0.043,0.063,0.084,0.098,0.101,0.213,0.334,0.383,0.43,0.448,0.511,0.801,0.835,1.642,1.614,1.496,1.496,1.476,1.068,0.481,0.22,0.119,0.099,0.07,0.072,0.063,0.076,0.14,0.205,0.28,0.297,0.3,0.479,0.877,1.098,1.611,1.629,1.686,1.686,1.631,1.528,1.862,1.703,1.531,2.196,0.395,0.416,0.453,0.728,0.917,0.986,1.17,2.171,3.011,2.909,3.301,1.377,0.778,0.799,0.947,1.039,0.879,0.76,1.372,1.674,1.674,1.68,1.823,1.793,1.162,0.783,0.216,0.152,0.152,0.152,0.049,0,0,0,0.117,0.127,0.127,0.127,0.127,0.127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.003,0.005,0.005,0.005,0.005,0.003,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.309,0.364,0.364,0.364,0.364,0.063,0.01,0.01,0.01,0.012,0.015,0.015,0.11,0.55,0.824,0.825,0.829,1.39,1.429,1.342,1.43,1.636,1.717,2.135,2.203,3.191,3.022,1.589,0.86,0.807,0.645,0.595,0.588,0.557,0.552,1.271,0.708,0.677,0.629,0.714,0.203,0.133,0.061,0.062,0.018,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.001,0.072,0.29,0.438,0.53,0.557,0.873,1.039,1.04,0.208,0.049,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.03,0.039,0.039,0.039,0.039,0.098,0.008,0.007,0.007,0.007,0.007,0.007,0.007,0.007,0.007,0.007,0.056,0.062,0.065,0.065,0.065,0.047,0.216,0.256,0.315,0.4,0.502,0.449,0.47,0.571,0.814,1.153,0.774,0.202,0.086,0.075,0.071,0.032,0.019,0.003,0.004,0.004,0.004,0.004,0.004,0.004,0.007,0.072,0.153,0.256,0.306,0.404,0.698,0.733,0.823,0.715,0.563,0.404,0.293,0.217,0.213,0.202,0.202,0.294,0.704,0.797,1.359,1.101,0.72,0.514,0.539,0.434,0.389,0.387,0.386,0.375,0.369,0.319,0.239,0.183,0.136,0.062,0.052,0.096,0.119,0.119,0.114,0.127,0.132,0.139,0.169,0.191,0.278,0.254,0.214,0.237,0.221,0.143,0.129,0.125,0.109,0.1,0.087,0.06,0.038,0.029,0.029,0.028,0.048,0.053,0.053,0.111,0.125,0.102,0.097,0.097,0.039,0.02,0.02,0.02,0.014,0.004,0.031,0.043,0.047,0.052,0.08,0.144,0.182,0.176,0.171,0.149,0.112,0.025,0,0,0,0,0,0,0,0.016,0.031,0.031,0.031,0.031,0.015,0,0,0,0,0,0.005,0.005,0.005,0.005,0.005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.005,0.005,0.005,0.005,0.005,0.001,0,0,0
//        				            ]
//        				        }
        				    ]
        				};
//        		 记录各个ch的最大最小值
        		 var ch_minmax = [];
//        		 差
        		 var ch_difference = [];
        		 
//    			 console.log(devdata);
        		 for(i in devdata){
        			 
        			 
        			 
        			 ch_minmax[i] = [Math.min.apply(Math,devdata[i].data),Math.max.apply(Math,devdata[i].data)];
        			 ch_difference[i] = ch_minmax[i][1] - ch_minmax[i][0];
        			 
        			 
        			 
        			 option.title.push({
 				        text: (parseInt(i)+1),
				        x: 'left',
				        textStyle:{
				        	fontSize:14,
				        	fontWeight:"bolder"
				        },
				        top:i*(h/13)
				    });

        			 
        			 option.legend.data.push((parseInt(i)+1));
        			 
        			 var grid_key = option.grid.push({
 				        left: 100,
 				        right: 50,
 				        height: (h/13)-20,
 				        top: i*(h/13)+10,
 				     });
        			 
        			 

        			 var xAxis_key = option.xAxis.push({
			            gridIndex: i,
			            type : 'category',
			            data: [],
			            show:i==11?true:false
			         });
        			 
        			 var yAxis_key = option.yAxis.push({
			            gridIndex: i,
//			            name : 'y',
			            type : 'value',
//			            min : 'dataMin',
//			            max : 'dataMax',
			            
			            min : ch_minmax[i][0],
			            max : ch_minmax[i][1],
			            interval:0,
			            axisLabel: {
                            show: true,
                            textStyle: {
                                color: '#fff'
                            }
                        }
			         });
        			 
        			 var series_key = option.series.push({
			            name:(parseInt(i)+1),
			            type:'line',
			            xAxisIndex: i,
			            yAxisIndex: i,
			            symbolSize: 8,
			            hoverAnimation: false,
			            symbol:'none',
			            data: [],
			            itemStyle:{
			            	normal :{
			            		color:dataGconfig.chn==i?"#c23531":"#ca8622"//焦点c23531
			            	}
			            }
			         });
        			 
        			 var max = null;
        			 for(var a in devdata[i].data){
        				 option.xAxis[xAxis_key-1].data.push(a);
        				 
        				 option.series[series_key-1].data.push(parseFloat(devdata[i].data[a]));
        				 
        				 if(max == null || max<Math.abs(devdata[i].data[a])) max = Math.abs(devdata[i].data[a]);
        			 }
//        			 option.yAxis[yAxis_key-1].interval = max;
        			 
        			 if(i >= 11) break;
        		 }
        		 
        		 
        		 
        		 
//        		 console.log(ch_minmax);
//        		 console.log(ch_difference);
//        		 console.log(JSON.stringify(option));
        		 
//				 真实的最大最小值
				 $(".yAxis_f").empty();
				 
        		 //找最大差
        		 var max_difference = Math.max.apply(Math,ch_difference);
//        		 var max_difference_2 = Math.ceil(max_difference/2);//除以2，进一取整
        		 var max_difference_2 = (max_difference/2).toFixed(5);
        		 
//        		 console.log(max_difference_2);
        		 
        		 for(var a in option.yAxis){
        			 option.yAxis[a].interval = max_difference;
        			 
//    				 真实的最大最小值
        			 $(".yAxis_f").append("<ul><li>"+option.yAxis[a].max+"</li><li>"+option.yAxis[a].min+"</li></ul>");
        			 
        			 if(option.yAxis[a].max - option.yAxis[a].min != max_difference){
        				 //小于最大差的，都加
//        				 var this_difference = max_difference_2 - Math.ceil((option.yAxis[a].max - option.yAxis[a].min)/2);
        				 var this_difference = max_difference_2 - ((option.yAxis[a].max - option.yAxis[a].min)/2);
        				 option.yAxis[a].min = option.yAxis[a].min-this_difference;
        				 option.yAxis[a].max = option.yAxis[a].max+this_difference;
        				 
        				 
//        				 console.log(option.yAxis[a].min-this_difference);
//        				 console.log(option.yAxis[a].max+this_difference);
        			 }
        			 
//    				 option.yAxis[a].min = Math.ceil(option.yAxis[a].min);
//    				 option.yAxis[a].max = Math.ceil(option.yAxis[a].max);
    				 
    				 option.yAxis[a].min = (option.yAxis[a].min).toFixed(5);
    				 option.yAxis[a].max = (option.yAxis[a].max).toFixed(5);
        		 }
        		 
        		 
        		 
//        		 console.log(option);
				
        		myChart01.setOption(option);
				
				dataGconfig.r = false;
				
				dataGconfig.time = setTimeout(function(){
					dataG(dataGconfig.info);
				},2000);
        	 }
         }
     });
}
//点击楼，重新绘图
function map_jiasuduji(chn){
	dataGconfig.chn = chn-1;
	
	clearInterval(dataGconfig.time);
	
	dataG(dataGconfig.info);
}

//jiasutu
//function accelerometerG(data,flag,dev) {
//	var change = data.data;
//	var lineContainer = document.getElementById(data.devname);
//	var resize = function() {
//		lineContainer.style.width = lineContainer.clientWidth + "px";
//		lineContainer.style.height = lineContainer.clientHeight + "px";
//	};
//	// resize();
//	var myChart = echarts.init(document.getElementById(data.devname));
//	myChart.hideLoading();
//	myChart.setOption({
//		tooltip : {
//			trigger : 'item',
//			axisPointer : {
//				animation : false
//			}
//		},
//		calculable : true,
//		grid : {
//			x : 0,
//			y : 0,
//			x2 : 0,
//			y2 : 0,
//		},
//		xAxis : [ {
//			name : data.xName,
//			type : 'category',
//			boundaryGap : false,
//			splitLine : {
//				show : false
//			},
//			scale : true,
//			show : false,
//			// 时间
//			data : data.time,
//			axisLabel : {
//				// show : true,
//				// X轴刻度配置
//				interval : 0
//			// 0：表示全部显示不间隔；auto:表示自动根据刻度个数和宽度自动设置间隔个数
//			}
//		} ],
//		yAxis : [ {
//			name : data.yUnits,
//			type : 'value',
//			splitNumber : 1,
//			splitLine : {
//				show : false
//			},
//			scale : true,
//			show : false,
//		} ],
//		series : [ {
//			name : '位移量',
//			type : 'line',
//			symbol : 'none',
//			itemStyle : {
//				normal : {
//					lineStyle : {}
//				}
//			},
//			data : change,
//		} ]
//	});
//	var sI = 1000;
//	if(flag == 5){
//		sI = 1000;
//	}else if(flag == 10){
//		sI = 2000;
//	}else if(flag == 30){
//		sI = 6000;
//	}
//	setInterval(function() {
//		var etime = NowDate();
//		var stime = NowDate(flag);
//		stime = "2017-08-21 14:00:00";
//		etime = "2017-08-21 14:00:00";
//		$.ajax({
//			         type: "get",
//			         cache: true,
//			         url: url + "zzcismp/earthquakeData/getEarthquakeDataExtraction.shtml",
//			         data:{devcode:dev,starttime:stime,endtime:etime,timetype:"second",flag:flag},
//			         contentType: "application/javascript;charset=UTF-8",
//			         xhrFields: {
//			             withCredentials: true
//			         },
//			         crossDomain: true,
//			         dataType: "jsonp",
//			         jsonp: "callback",
//			         success: function(json){
//			        	 if(json != null){
//			        	 var insert = [];
//			         	insert.push(json.data);
//			         	insert = insert[0];
//			         	change.splice(0,insert.length);
////						change.splice(change.length,insert.length,insert);
//			         	for(var i=0;i<insert.length;i++){
////			         		change.shift();
//			         		change.push(insert[i]);
//			         	}
//						myChart.setOption({
//							series : [ {
//								data : change,
//							} ]
//						});
//			        	 }
//			         },
//			         error: function(){
//			             // alert('fail');
//			         }
//			     });
//	}, sI);
//};

//傅里叶
function fftEcharts(){
	var time = NowDate();
	time = "2017-08-21 14:00:00";
	$.ajax({
         type: "get",
         cache: true,
         url: url + "zzcismp/earthquakeData/fourierTransform.shtml",
         data:{devcode:"1101B00020020N22",starttime:time,endtime:time,timetype:"second"},
         contentType: "application/javascript;charset=UTF-8",
         xhrFields: {
             withCredentials: true
         },
         crossDomain: true,
         dataType: "jsonp",
         jsonp: "callback",
         success: function(json){
//        	 alert(JSON.stringify(json));return;
        	

			var option = {
					title : {
				        text: '傅里叶振幅谱',
				        x : "center",
				    },
					tooltip : {
						trigger : 'axis'
					},
					legend : {
						data : "傅里叶",
						x : "center",
						y : "bottom"
					},
//					calculable : true,
					xAxis : [ {
						name : '频率',
//						show : false,
						type : 'category',
//						boundaryGap : false,
						// 时间
						data : [],
//						splitLine:{show: true},
						axisLabel : {
							show : true,
							// X轴刻度配置
							interval : 9
						// 0：表示全部显示不间隔；auto:表示自动根据刻度个数和宽度自动设置间隔个数
						}
					} ],
					yAxis : [ {
						name : "振幅",
						type : 'value'
					} ],
					series : [
			        {
			            name:'振幅',
			            symbol : 'none',
			            type:'line',
			            data: [],
			        }
			    ]
				};
				
//				console.log(json.data);
			
//				for(var i=0;i<(json.data.length)/2+1;i++){
//					var j=0;
//					j = i;
//					f.push(j);
//				}
				
//				all.data = json.data.slice(0,(json.data.length)/2+1);
//				all.hertz = f;			
			
				
				for(var i=0;i<json.data.length;i++){
					option.xAxis[0].data.push(i);
					option.series[0].data.push(parseFloat(json.data[i]).toFixed(5));
				}
				
				var f11 = setInterval(function(){
					if(option.series[0].data.length == json.data.length){
						echarts.init(document.getElementById("echarts_test11")).setOption(option);
						clearInterval(f11);
//						console.log(option);
						setTimeout("fftEcharts()",5000);
					}
				}, 50);
				
				
         },
         error: function(){
             // alert('fail');
         }
     });
}


/*// 三维模块
function pluginDomX() {
	return document.getElementById('swmx_x');
}
pluginX = pluginDomX;

function addModel() {
	if (pluginX().valid) {
		var model = {};
		model.url = "dx714.osgb";
		model.name = "B1"
		model.offsetX = 52.5;
		model.offsetY = 17;
		model.offsetZ = -5;
		model.text = "";
		model.textX = 0;
		model.textY = 0;
		model.textZ = 0;
		pluginX().addmodel(model);
		
		model.url = "dx714.osgb";
		model.name = "B2"
		model.offsetX = 52.5;
		model.offsetY = 17;
		model.offsetZ = -10;
		model.text = "";
		model.textX = 0;
		model.textY = 0;
		model.textZ = 0;
		pluginX().addmodel(model);

		var model1 = {};
		model1.url = "dxright714.osgb";
		model1.name = "B12";
		model1.offsetX = 52.5+30;
		model1.offsetY = 17;
		model1.offsetZ = -10;
		model1.text = "";
		model1.textX = 0;
		model1.textY = 0;
		model1.textZ = 0;
		pluginX().addmodel(model1);
		
		var model2 = {};
		model2.url = "1F.osgb";
		model2.name = "L1";
		model2.offsetX = 0;
		model2.offsetY = 0;
		model2.offsetZ = 0;
		model2.text = "";
		model2.textX = 80;
		model2.textY = -30;
		model2.textZ = 6;
		pluginX().addmodel(model2);
		floor.name.push(model2.name);
		floor.textZ.push(model2.textZ);

		model2.url = "2F.osgb";
		model2.name = "L2";
		// model2.offsetZ = 3;
		model2.textZ = 10;
		pluginX().addmodel(model2);
		floor.name.push(model2.name);
		floor.textZ.push(model2.textZ);

		model2.url = "3F.osgb";
		model2.name = "L3";
		// model2.offsetZ = 6;
		model2.textZ = 10 + 3 * 1;
		pluginX().addmodel(model2);
		floor.name.push(model2.name);
		floor.textZ.push(model2.textZ);

		model2.url = "4F.osgb";
		model2.name = "L4";
		// model2.offsetZ = 9;
		model2.textZ = 10 + 3 * 2;
		pluginX().addmodel(model2);
		floor.name.push(model2.name);
		floor.textZ.push(model2.textZ);

		model2.url = "5F.osgb";
		model2.name = "L5";
		// model2.offsetZ = 12;
		model2.textZ = 10 + 3 * 3;
		pluginX().addmodel(model2);
		floor.name.push(model2.name);
		floor.textZ.push(model2.textZ);

		model2.url = "6F.osgb";
		model2.name = "L6";
		// model2.url = "box2.OSGB";
		// model2.offsetZ = 15;
		model2.textZ = 10 + 3 * 4;
		pluginX().addmodel(model2);
		floor.name.push(model2.name);
		floor.textZ.push(model2.textZ);

		model2.url = "7F.osgb";
		model2.name = "L7";
		// model2.url = "box2.OSGB";
		// model2.offsetZ = 15;
		model2.textZ = 10 + 3 * 5;
		pluginX().addmodel(model2);
		floor.name.push(model2.name);
		floor.textZ.push(model2.textZ);

		model2.url = "8F.osgb";
		model2.name = "L8";
		// model2.url = "box2.OSGB";
		// model2.offsetZ = 15;
		model2.textZ = 10 + 3 * 6;
		pluginX().addmodel(model2);
		floor.name.push(model2.name);
		floor.textZ.push(model2.textZ);
	} else {
//		alert("Plugin is not working :(");
	}
}
function setManipulatorEnable(input){
	var b = $(input).is(':checked');
	
	if(b){
		pluginX().setManipulatorEnable(false);
	}else{
		pluginX().setManipulatorEnable(true);
	}
}
function updateModel(Model_top_num) {
	if(!Model_top_num) return;
	var type = "";
	var obj = document.getElementsByName("Mxyz");
	for (var i = 0; i < obj.length; i++) {
		if (obj[i].checked) {
			type = obj[i].value;
		}
	}
	
//	console.log(obj[0].checked);
//	console.log(obj[1].checked);
//	console.log(obj[2].checked);

	// Model floor.Z
	var Model = [ {
		floor_name : "1F",
		num : 0.05
	}, {
		floor_name : "2F",
		num : 0.1
	}, {
		floor_name : "4F",
		num : 0.15
	}, {
		floor_name : "8F",
		num : 0.3
	} ];

//	Model[3].num = (parseInt((Math.random() * (10 - 0) + 0))) / 20;
//	Model[3].num = (parseInt((Math.random() * (10 - 0) + 0))) * -1;
//	Model[3].num = Model_3_num;
//	console.log(Model[3].num);
	
	

//	floor.Z[0] = Model[0].num;
//	floor.Z[1] = Model[1].num;
//	floor.Z[3] = Model[2].num;
//	floor.Z[7] = Model[3].num;
//
//	floor.Z[2] = (Model[2].num - Model[1].num) / 2 + Model[1].num;
//	floor.Z[4] = (Model[3].num - Model[2].num) / 4 + Model[2].num;
//	floor.Z[5] = 2 * (Model[3].num - Model[2].num) / 4 + Model[2].num;
//	floor.Z[6] = 3 * (Model[3].num - Model[2].num) / 4 + Model[2].num;
	
//	几层动？
	var fn = 5;
	
	floor.Z[7] = Model_top_num;
	floor.Z[6] = Model_top_num/fn*4;
	floor.Z[5] = Model_top_num/fn*3;
	floor.Z[4] = Model_top_num/fn*2;
	floor.Z[3] = Model_top_num/fn*1;
	floor.Z[2] = 0;
	floor.Z[1] = 0;
	floor.Z[0] = 0;
	
	
	var a, b, c;
	for (var i = 0; i < floor.name.length; i++) {
		var random = floor.Z[i];

		var temp_fv = fv;
//		var temp_fv = fv*1000;
//		random*=1000;
		

		if (Math.abs(random) >= temp_fv*0.9) {
//			红
			a = 0.866666;
			b = 0.317647;
			c = 0.298039;
		} else if (Math.abs(random) >= temp_fv*0.75) {
//			黄
			a = 0.952941;
			b = 0.478431;
			c = 0.113725;
		} else if(Math.abs(random) >= temp_fv*0.5) {
//			绿
			a = 0.368627;
			b = 0.725490;
			c = 0.368627;
		}else{
//			黑
			a = 0.2;
			b = 0.2;
			c = 0.2;
		}
		// if(pluginX().valid&&pluginY().valid&&pluginXY().valid)
		if (pluginX().valid) {
			var modelX = {};
			modelX.name = floor.name[i];
			//modelX.text = floor.Z[i];
			modelX.textX = 80;
			modelX.textY = -30;
			modelX.textZ = floor.textZ[i];
			// 动态位移设置
			if (type == "X") {
				modelX.offsetX = random;
				modelX.offsetY = 0;
			} else if (type == "Y") {
				modelX.offsetX = 0;
				modelX.offsetY = random;
			} else if (type == "Z") {
				modelX.offsetX = random;
				modelX.offsetY = random;
			}
			// end
			modelX.offsetZ = 0;
			pluginX().updatemodel(modelX);
//			console.log(i);
//			console.log(a);
//			console.log('---------d');
			if (i>2 && a!=0.2) {
				pluginX().setModelColor(floor.name[i], a, b, c, 1);
			}else{
				pluginX().clearModelColor(floor.name[i]);
			}
		} else {
			alert("plugin is not working :(");
		}
	}
}*/
/*var three = {
	start : 0
};
//获取楼摇晃的数据，这是之前的，不知道为啥,作废
function getDisplacementCorrection() {
	var endtime = pFun.date.getNowFormatDate(0);//结束
	
//	endtime = pFun.date.getDate(endtime,0,0,0,-28,0,0);
//	endtime = '2017-08-21 14:01:14';
	
	var starttime = pFun.date.getDate(endtime,0,0,0,0,-1,0);//开始
	
//	console.log(starttime);
//	console.log(endtime);

	$.ajax({
        type: "get",
        cache: true,
        url: url + "zzcismp/earthquakeData/getDisplacementCorrection.shtml",
        data:{devcode:"1101B00020020N22",starttime:starttime,endtime:endtime,timetype:"second",flag:"10"},
        contentType: "application/javascript;charset=UTF-8",
        xhrFields: {
            withCredentials: true
        },
        crossDomain: true,
        dataType: "jsonp",
        jsonp: "callback",
        success: function(json){
        	console.log(json);
//        	return;
        	//获取最大值、最小值
        	var max = Math.max.apply(null, json);
        	var min = Math.min.apply(null, json);
        	if(Math.abs(max) > Math.abs(min)){
        		fv = Math.abs(max);
        	}else{
        		fv = Math.abs(min);
        	}
        	$(".ruler .red div").html((((fv)*0.9).toFixed(8)*1) + "m");
        	$(".ruler .yellow div").html((((fv)*0.75).toFixed(8)*1) + "m");
        	$(".ruler .green div").html((((fv)*0.5).toFixed(8)*1) + "m");
        	
//        	摇晃楼
        	var uf = 0
        	

        	if(three.start == 0){
        		three.start = 1;
            	threeStart();
        	}
        	var ufr = setInterval(function(){
        		
//        		3d楼
        		updateModel(parseFloat(json[uf]));
        		
//        		模型楼
//        		afloor(parseFloat(json[uf]));
        		if(uf%5 == 0)
        			render(parseFloat(json[uf]),0);
//    			clearInterval(ufr);

        		if(json.length == uf+1){
        			clearInterval(ufr);
        			
        			getDisplacementCorrection();
        		}
        		uf++;
        	},1000/(200/10)/10);
        }
    });
	
}*/
/*var video = {};
function afloor(x){
//	作废，有新的了
	
	//获取左边3d图的尺寸
	var f3d = {};
	f3d.width = $(".f3d").width();
//	f3d.height = $(".f3d").height();
	f3d.height = 500;
	
//	$("#afloor").width(f3d.width);
//	$("#afloor").height(f3d.height);
	

//	颜色
//	console.log(fv);
//	console.log(x);
	var strokeStyle = '#000';
	if(Math.abs(x) >= (fv*0.9)){
		strokeStyle = 'red';
	}else if(Math.abs(x) >= (fv*0.75)){
		strokeStyle = 'yellow';
	}else if(Math.abs(x) >= (fv*0.5)){
		strokeStyle = 'green';
	}
	
	x*=1000;
	
	video.canvas=document.getElementById('afloor');

	video.bessel = {
		frame:0,//帧
	};
	video.bessel.left = {
		heigth:460,//楼高m


		start:[360,480],
		start_control:[],
		end:[],
		end_control:[]
	};

	// 楼底初始控制点
	video.bessel.left.start_control = [
		video.bessel.left.start[0],
		video.bessel.left.start[1]-video.bessel.left.heigth*0.4
	];

	// 楼顶初始位置
	video.bessel.left.end = [
		video.bessel.left.start[0],
		video.bessel.left.start[1]-video.bessel.left.heigth
	];
	// 楼顶初始控制点
	video.bessel.left.end_control = [
		video.bessel.left.end[0],
		video.bessel.left.end[1]+video.bessel.left.heigth*0.3
	];



	video.bessel.right = {
		heigth:460,//楼高m

		start:[460,480],
		start_control:[],
		end:[],
		end_control:[]
	};

	// 楼底初始控制点
	video.bessel.right.start_control = [
		video.bessel.right.start[0],
		video.bessel.right.start[1]-video.bessel.right.heigth*0.4
	];

	// 楼顶初始位置
	video.bessel.right.end = [
		video.bessel.right.start[0],
		video.bessel.right.start[1]-video.bessel.right.heigth
	];
	// 楼顶初始控制点
	video.bessel.right.end_control = [
		video.bessel.right.end[0],
		video.bessel.right.end[1]+video.bessel.right.heigth*0.3
	];

	video.frame = function(){

		var bessel = JSON.parse(JSON.stringify(video.bessel));  


		var canvas = video.canvas;

	    canvas.height=f3d.height;
	    canvas.width=f3d.width;

	    var context=canvas.getContext('2d');

	    // 清空画布
		context.clearRect(0,0,canvas.width,canvas.height);

	    // 来个背景色
//	    context.fillStyle='#eee';
//	    context.fillRect(0, 0, canvas.width, canvas.height);
//	    context.fill();

	    //----------------------------------------------
//	    if(bessel.left.frame%10 == 0)
//	    	console.log(x);

		
	    // 贝塞尔线
	    context.strokeStyle=strokeStyle;//红
	    context.beginPath();
	    // 楼左边
	    // 起始点固定 楼底
	    bessel.left.start_control[0]	-=(x*0.1);
		bessel.left.end_control[0]		+=(x*0.1);
		bessel.left.end_control[1]		-=(Math.abs(x)*0.3);
		bessel.left.end[0]				+=x;
		if(x < 0){
			bessel.left.end[1]			+=(Math.abs(x)*0.2);
		}else{
			bessel.left.end[1]			-=(Math.abs(x)*0.1);
		}
//console.log(bessel);
		context.moveTo(bessel.left.start[0],bessel.left.start[1]);
		context.bezierCurveTo(
			// 楼底定位
			bessel.left.start_control[0],
			bessel.left.start_control[1],
			// 楼顶定位
			bessel.left.end_control[0],
			bessel.left.end_control[1],
			//楼顶
			bessel.left.end[0],
			bessel.left.end[1]
		); // 创建弧
	    context.stroke();



	    // 楼右边
	    bessel.right.start_control[0]	-=(x*0.1);
		bessel.right.end_control[0]		+=(x*0.1);
		bessel.right.end_control[1]		-=(Math.abs(x)*0.3);
		bessel.right.end[0]				+=x;
		if(x > 0){
			bessel.right.end[1]			+=(Math.abs(x)*0.2);
		}else{
			bessel.right.end[1]			-=(Math.abs(x)*0.1);
		}

		context.moveTo(bessel.right.start[0],bessel.right.start[1]);
		context.bezierCurveTo(
			// 楼底定位
			bessel.right.start_control[0],
			bessel.right.start_control[1],
			// 楼顶定位
			bessel.right.end_control[0],
			bessel.right.end_control[1],
			//楼顶
			bessel.right.end[0],
			bessel.right.end[1]
		); // 创建弧
	    context.stroke();


		// 楼低
		context.moveTo(bessel.left.start[0],bessel.left.start[1]);
        context.lineTo(bessel.right.start[0],bessel.right.start[1]);
	    context.stroke();

		// 楼顶
		context.moveTo(bessel.left.end[0],bessel.left.end[1]);
        context.lineTo(bessel.right.end[0],bessel.right.end[1]);
	    context.stroke();

	    video.canvas = canvas;


//	    $("#frame").html(video.bessel.frame +"-"+ json[video.bessel.frame]);

	    video.bessel.frame++;
//	    if(!json[video.bessel.frame]){
			// window.requestAnimationFrame(video.frame);
			// clearInterval(fr);
//			video.bessel.frame = 0;
//	    }
	};	

	
	video.frame();
	// window.requestAnimationFrame(video.frame);

//	var fr = setInterval(video.frame,1000/(200/10)/10);
	
	
}
*/
//时间函数
function NowDate(info) {
	var time = new Date();
	var now = new Date(time.getTime() - 5*1000);
	if(info == 10){
		now = new Date(now.getTime() - 1000);
	}else if(info == 30){
		now = new Date(now.getTime() - 5*1000);
	}
	
	var year = now.getFullYear(); // 年
	var month = now.getMonth() + 1; // 月
	var day = now.getDate(); // 日
	var hh = now.getHours(); // 时
	var mm = now.getMinutes(); // 分
	var ss = now.getSeconds(); // 秒

	var clock = year + "-";
	if (month < 10)
		clock += "0";
	clock += month + "-";
	if (day < 10)
		clock += "0";
	clock += day + " ";
	if (hh < 10)
		clock += "0";
	clock += hh + ":";
	if (mm < 10)
		clock += "0";
	clock += mm + ":";
	if (ss < 10)
		clock += "0";
	clock += ss;

	return (clock);
}
function StartDate(changeInfo) {
	var time = new Date();
	var now = new Date(time.getTime() - 5*1000);
	var sda = new Date(now.getTime() - 5*1000);
	var sdaw = new Date(now.getTime() - 10*1000);
	var sdam = new Date(now.getTime() - 30*1000);
	if (changeInfo == "30") {
		var year = sdam.getFullYear(); // 年
		var month = sdam.getMonth() + 1; // 月
		var day = sdam.getDate(); // 日
	} else if (changeInfo == "10") {
		var year = sdaw.getFullYear(); // 年
		var month = sdaw.getMonth() + 1; // 月
		var day = sdaw.getDate(); // 日
	} else if (changeInfo == "5") {
		var year = sda.getFullYear(); // 年
		var month = sda.getMonth() + 1; // 月
		var day = sda.getDate(); // 日
	}
	var hh = now.getHours(); // 时
	var mm = now.getMinutes(); // 分
	var ss = now.getSeconds(); // 秒

	var clock = year + "-";
	if (month < 10)
		clock += "0";
	clock += month + "-";
	if (day < 10)
		clock += "0";
	clock += day + " ";
	if (hh < 10)
		clock += "0";
	clock += hh + ":";
	if (mm < 10)
		clock += "0";
	clock += mm + ":";
	if (ss < 10)
		clock += "0";
	clock += ss;

	return (clock);
}



function changeColor(info){
	info = 1;
	if(info == 5){
		$("#fiveS").css("background-color", "#009ee6");
		$("#tenS").css("background-color", "#FFFFFF");
		$("#thirtyS").css("background-color", "#FFFFFF");
	}else if(info == 10){
		$("#fiveS").css("background-color", "#FFFFFF");
		$("#tenS").css("background-color", "#009ee6");
		$("#thirtyS").css("background-color", "#FFFFFF");
	}else if(info == 30){
		$("#fiveS").css("background-color", "#FFFFFF");
		$("#tenS").css("background-color", "#FFFFFF");
		$("#thirtyS").css("background-color", "#009ee6");
	}
}
//屏蔽滚轮功能
function disabledMouseWheel() {
	var threeD = document.getElementById("threeDscroll");
	 if (threeD.addEventListener) {
	    document.addEventListener('DOMMouseScroll', scrollFunc, false);
	 }//W3C
//	 window.onmousewheel = 
		 threeD.onmousewheel = scrollFunc;//IE/Opera/Chrome
}
function scrollFunc(evt) {
	 return false;
}
	window.onload=disabledMouseWheel;